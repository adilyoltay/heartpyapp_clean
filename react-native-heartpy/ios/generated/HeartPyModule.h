/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#ifndef __cplusplus
#error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
#endif
#import <Foundation/Foundation.h>
#import <RCTRequired/RCTRequired.h>
#import <RCTTypeSafety/RCTConvertHelpers.h>
#import <RCTTypeSafety/RCTTypedModuleConstants.h>
#import <React/RCTBridgeModule.h>
#import <React/RCTCxxConvert.h>
#import <React/RCTManagedPointer.h>
#import <ReactCommon/RCTTurboModule.h>
#import <optional>
#import <vector>


@protocol NativeHeartPySpec <RCTBridgeModule, RCTTurboModule>

- (NSDictionary *)analyze:(NSArray *)signal
                       fs:(double)fs
                  options:(NSDictionary * _Nullable)options;
- (NSDictionary *)analyzeSegmentwise:(NSArray *)signal
                                  fs:(double)fs
                             options:(NSDictionary * _Nullable)options;
- (NSDictionary *)analyzeRR:(NSArray *)rrIntervals
                    options:(NSDictionary * _Nullable)options;
- (void)analyzeAsync:(NSArray *)signal
                  fs:(double)fs
             options:(NSDictionary * _Nullable)options
             resolve:(RCTPromiseResolveBlock)resolve
              reject:(RCTPromiseRejectBlock)reject;
- (void)analyzeSegmentwiseAsync:(NSArray *)signal
                             fs:(double)fs
                        options:(NSDictionary * _Nullable)options
                        resolve:(RCTPromiseResolveBlock)resolve
                         reject:(RCTPromiseRejectBlock)reject;
- (void)analyzeRRAsync:(NSArray *)rrIntervals
               options:(NSDictionary * _Nullable)options
               resolve:(RCTPromiseResolveBlock)resolve
                reject:(RCTPromiseRejectBlock)reject;
- (NSDictionary *)analyzeTyped:(NSArray *)signal
                            fs:(double)fs
                       options:(NSDictionary * _Nullable)options;
- (NSDictionary *)analyzeSegmentwiseTyped:(NSArray *)signal
                                       fs:(double)fs
                                  options:(NSDictionary * _Nullable)options;
- (NSDictionary *)analyzeRRTyped:(NSArray *)rrIntervals
                         options:(NSDictionary * _Nullable)options;
- (void)analyzeAsyncTyped:(NSArray *)signal
                       fs:(double)fs
                  options:(NSDictionary * _Nullable)options
                  resolve:(RCTPromiseResolveBlock)resolve
                   reject:(RCTPromiseRejectBlock)reject;
- (void)analyzeSegmentwiseAsyncTyped:(NSArray *)signal
                                  fs:(double)fs
                             options:(NSDictionary * _Nullable)options
                             resolve:(RCTPromiseResolveBlock)resolve
                              reject:(RCTPromiseRejectBlock)reject;
- (void)analyzeRRAsyncTyped:(NSArray *)rrIntervals
                    options:(NSDictionary * _Nullable)options
                    resolve:(RCTPromiseResolveBlock)resolve
                     reject:(RCTPromiseRejectBlock)reject;
- (NSArray<NSNumber *> *)interpolateClipping:(NSArray *)signal
                                          fs:(double)fs
                                   threshold:(NSNumber *)threshold;
- (NSArray<NSNumber *> *)hampelFilter:(NSArray *)signal
                           windowSize:(NSNumber *)windowSize
                            threshold:(NSNumber *)threshold;
- (NSArray<NSNumber *> *)scaleData:(NSArray *)signal
                            newMin:(NSNumber *)newMin
                            newMax:(NSNumber *)newMax;
- (NSNumber *)installJSI;
- (NSDictionary *)getConfig;
- (void)setConfig:(NSDictionary *)config;
- (void)rtCreate:(double)fs
         options:(NSDictionary * _Nullable)options
         resolve:(RCTPromiseResolveBlock)resolve
          reject:(RCTPromiseRejectBlock)reject;
- (void)rtPush:(double)handle
       samples:(NSArray *)samples
            t0:(NSNumber *)t0
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;
- (void)rtPushTs:(double)handle
         samples:(NSArray *)samples
      timestamps:(NSArray *)timestamps
         resolve:(RCTPromiseResolveBlock)resolve
          reject:(RCTPromiseRejectBlock)reject;
- (void)rtPoll:(double)handle
       resolve:(RCTPromiseResolveBlock)resolve
        reject:(RCTPromiseRejectBlock)reject;
- (void)rtSetWindow:(double)handle
      windowSeconds:(double)windowSeconds
            resolve:(RCTPromiseResolveBlock)resolve
             reject:(RCTPromiseRejectBlock)reject;
- (void)rtDestroy:(double)handle
          resolve:(RCTPromiseResolveBlock)resolve
           reject:(RCTPromiseRejectBlock)reject;
- (void)addListener:(NSString *)eventType;
- (void)removeListeners:(double)count;

@end
namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeHeartPy'
   */
  class JSI_EXPORT NativeHeartPySpecJSI : public ObjCTurboModule {
  public:
    NativeHeartPySpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

