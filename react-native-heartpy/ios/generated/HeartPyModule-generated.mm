/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "HeartPyModule.h"


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyze(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyze", @selector(analyze:fs:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwise(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyzeSegmentwise", @selector(analyzeSegmentwise:fs:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRR(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyzeRR", @selector(analyzeRR:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeAsync", @selector(analyzeAsync:fs:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeSegmentwiseAsync", @selector(analyzeSegmentwiseAsync:fs:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeRRAsync", @selector(analyzeRRAsync:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyzeTyped", @selector(analyzeTyped:fs:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyzeSegmentwiseTyped", @selector(analyzeSegmentwiseTyped:fs:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "analyzeRRTyped", @selector(analyzeRRTyped:options:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeAsyncTyped", @selector(analyzeAsyncTyped:fs:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeSegmentwiseAsyncTyped", @selector(analyzeSegmentwiseAsyncTyped:fs:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "analyzeRRAsyncTyped", @selector(analyzeRRAsyncTyped:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_interpolateClipping(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ArrayKind, "interpolateClipping", @selector(interpolateClipping:fs:threshold:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_hampelFilter(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ArrayKind, "hampelFilter", @selector(hampelFilter:windowSize:threshold:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_scaleData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ArrayKind, "scaleData", @selector(scaleData:newMin:newMax:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_installJSI(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, BooleanKind, "installJSI", @selector(installJSI), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_getConfig(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "getConfig", @selector(getConfig), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_setConfig(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "setConfig", @selector(setConfig:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtCreate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtCreate", @selector(rtCreate:options:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPush(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtPush", @selector(rtPush:samples:t0:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPushTs(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtPushTs", @selector(rtPushTs:samples:timestamps:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPoll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtPoll", @selector(rtPoll:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtSetWindow(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtSetWindow", @selector(rtSetWindow:windowSeconds:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtDestroy(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rtDestroy", @selector(rtDestroy:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "addListener", @selector(addListener:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "removeListeners", @selector(removeListeners:), args, count);
    }

  NativeHeartPySpecJSI::NativeHeartPySpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["analyze"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyze};
        
        
        methodMap_["analyzeSegmentwise"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwise};
        
        
        methodMap_["analyzeRR"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRR};
        
        
        methodMap_["analyzeAsync"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeAsync};
        
        
        methodMap_["analyzeSegmentwiseAsync"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsync};
        
        
        methodMap_["analyzeRRAsync"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRAsync};
        
        
        methodMap_["analyzeTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeTyped};
        
        
        methodMap_["analyzeSegmentwiseTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseTyped};
        
        
        methodMap_["analyzeRRTyped"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRTyped};
        
        
        methodMap_["analyzeAsyncTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeAsyncTyped};
        
        
        methodMap_["analyzeSegmentwiseAsyncTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsyncTyped};
        
        
        methodMap_["analyzeRRAsyncTyped"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRAsyncTyped};
        
        
        methodMap_["interpolateClipping"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_interpolateClipping};
        
        
        methodMap_["hampelFilter"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_hampelFilter};
        
        
        methodMap_["scaleData"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_scaleData};
        
        
        methodMap_["installJSI"] = MethodMetadata {0, __hostFunction_NativeHeartPySpecJSI_installJSI};
        
        
        methodMap_["getConfig"] = MethodMetadata {0, __hostFunction_NativeHeartPySpecJSI_getConfig};
        
        
        methodMap_["setConfig"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_setConfig};
        
        
        methodMap_["rtCreate"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_rtCreate};
        
        
        methodMap_["rtPush"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_rtPush};
        
        
        methodMap_["rtPushTs"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_rtPushTs};
        
        
        methodMap_["rtPoll"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_rtPoll};
        
        
        methodMap_["rtSetWindow"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_rtSetWindow};
        
        
        methodMap_["rtDestroy"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_rtDestroy};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_removeListeners};
        
  }
} // namespace facebook::react
