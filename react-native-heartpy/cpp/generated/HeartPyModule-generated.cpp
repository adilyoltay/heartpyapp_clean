
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "HeartPyModule.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyze(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyze", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwise(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyzeSegmentwise", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRR(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyzeRR", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeAsync", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeSegmentwiseAsync", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRAsync(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeRRAsync", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyzeTyped", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyzeSegmentwiseTyped", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "analyzeRRTyped", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;)Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeAsyncTyped", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeSegmentwiseAsyncTyped", "(Lcom/facebook/react/bridge/ReadableArray;DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_analyzeRRAsyncTyped(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "analyzeRRAsyncTyped", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_interpolateClipping(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ArrayKind, "interpolateClipping", "(Lcom/facebook/react/bridge/ReadableArray;DLjava/lang/Double;)Lcom/facebook/react/bridge/WritableArray;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_hampelFilter(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ArrayKind, "hampelFilter", "(Lcom/facebook/react/bridge/ReadableArray;Ljava/lang/Double;Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableArray;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_scaleData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ArrayKind, "scaleData", "(Lcom/facebook/react/bridge/ReadableArray;Ljava/lang/Double;Ljava/lang/Double;)Lcom/facebook/react/bridge/WritableArray;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_installJSI(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "installJSI", "()Z", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_getConfig(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConfig", "()Lcom/facebook/react/bridge/WritableMap;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_setConfig(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "setConfig", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtCreate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtCreate", "(DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPush(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtPush", "(DLcom/facebook/react/bridge/ReadableArray;Ljava/lang/Double;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPushTs(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtPushTs", "(DLcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtPoll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtPoll", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtSetWindow(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtSetWindow", "(DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_rtDestroy(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "rtDestroy", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeHeartPySpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
}

NativeHeartPySpecJSI::NativeHeartPySpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["analyze"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyze};
  methodMap_["analyzeSegmentwise"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwise};
  methodMap_["analyzeRR"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRR};
  methodMap_["analyzeAsync"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeAsync};
  methodMap_["analyzeSegmentwiseAsync"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsync};
  methodMap_["analyzeRRAsync"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRAsync};
  methodMap_["analyzeTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeTyped};
  methodMap_["analyzeSegmentwiseTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseTyped};
  methodMap_["analyzeRRTyped"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRTyped};
  methodMap_["analyzeAsyncTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeAsyncTyped};
  methodMap_["analyzeSegmentwiseAsyncTyped"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_analyzeSegmentwiseAsyncTyped};
  methodMap_["analyzeRRAsyncTyped"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_analyzeRRAsyncTyped};
  methodMap_["interpolateClipping"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_interpolateClipping};
  methodMap_["hampelFilter"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_hampelFilter};
  methodMap_["scaleData"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_scaleData};
  methodMap_["installJSI"] = MethodMetadata {0, __hostFunction_NativeHeartPySpecJSI_installJSI};
  methodMap_["getConfig"] = MethodMetadata {0, __hostFunction_NativeHeartPySpecJSI_getConfig};
  methodMap_["setConfig"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_setConfig};
  methodMap_["rtCreate"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_rtCreate};
  methodMap_["rtPush"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_rtPush};
  methodMap_["rtPushTs"] = MethodMetadata {3, __hostFunction_NativeHeartPySpecJSI_rtPushTs};
  methodMap_["rtPoll"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_rtPoll};
  methodMap_["rtSetWindow"] = MethodMetadata {2, __hostFunction_NativeHeartPySpecJSI_rtSetWindow};
  methodMap_["rtDestroy"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_rtDestroy};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeHeartPySpecJSI_removeListeners};
}

std::shared_ptr<TurboModule> HeartPyModule_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "HeartPyModule") {
    return std::make_shared<NativeHeartPySpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
